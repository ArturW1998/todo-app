{"version":3,"sources":["shared/ui/spin.tsx","pages/index.tsx","app/providers/index.ts","app/providers/with-router.tsx","app/index.tsx","reportWebVitals.ts","index.tsx"],"names":["TasksListPage","lazy","TaskDetailsPage","Routing","exact","path","component","to","withProviders","compose","fallback","delay","className","size","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2GAAA,iD,+GCIMA,EAAgBC,gBAAK,kBAAM,uDAC3BC,EAAkBD,gBAAK,kBAAM,uDAEtBE,EAAU,WACnB,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWN,IACjC,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,WAAWC,UAAWJ,IACxC,cAAC,IAAD,CAAUK,GAAG,U,iCCTZC,EAAgBC,KCCH,SAACH,GAAD,OAAsC,kBAC5D,cAAC,IAAD,UACI,cAAC,WAAD,CAAUI,SAAU,cAAC,IAAD,CAAMC,MAAO,IAAKC,UAAU,UAAUC,KAAK,UAA/D,SACKP,YCKEE,G,MAAAA,GARH,WACV,OACE,qBAAKI,UAAU,MAAf,SACE,cAAC,EAAD,UCOSE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6f0a5159.chunk.js","sourcesContent":["export { Spin } from \"antd\";\n","// Either use @loadable/component, within the tutorial - not critical\nimport { lazy } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nconst TasksListPage = lazy(() => import(\"./tasks-list\"));\nconst TaskDetailsPage = lazy(() => import(\"./task-details\"));\n\nexport const Routing = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={TasksListPage} />\n            <Route exact path=\"/:taskId\" component={TaskDetailsPage} />\n            <Redirect to=\"/\" />\n        </Switch>\n    );\n};\n","import compose from \"compose-function\";\nimport { withRouter } from \"./with-router\";\n\nexport const withProviders = compose(withRouter);\n","import { Suspense } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Spin } from \"shared/ui/spin\";\n\nexport const withRouter = (component: () => React.ReactNode) => () => (\n    <BrowserRouter>\n        <Suspense fallback={<Spin delay={300} className=\"overlay\" size=\"large\" />}>\n            {component()}\n        </Suspense>\n    </BrowserRouter>\n);\n","import { Routing } from \"pages\";\nimport { withProviders } from \"./providers\";\nimport \"./index.scss\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <Routing />\n    </div>\n  );\n}\n\nexport default withProviders(App);\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"app\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}